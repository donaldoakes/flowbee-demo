attributes:
  ArrowStyle: ArrowEnd
  NodeStyle: BoxIcon
  PROCESS_VISIBILITY: PUBLIC
  PerformanceLevel: '0'
  display: x=41,y=40,w=210,h=26
  requestMethod: POST
steps:
- id: S1
  name: Start
  descriptor: flowbee-demo.start
  attributes:
    display: x=40,y=140,w=60,h=40
  links:
  - id: L4
    attributes:
      display: type=Elbow,x=140,y=160,xs=104&176,ys=160&160
    event: FINISH
    to: S5
- id: S2
  name: Stop
  descriptor: flowbee-demo.stop
  attributes:
    display: x=510,y=140,w=60,h=40
- id: S3
  name: Invoke
  descriptor: flowbee-demo.adapter.rest.RestServiceAdapter
  attributes:
    EndpointUri: ${url}
    HeadersVariable: serviceRequestHeaders
    HttpMethod: POST
    Output Documents: '["serviceRequest"]'
    PostScriptLang: Groovy
    PreScript: |
      if (url.endsWith('/Workgroups')) {
          return '''{
        "name": "Yet another group",
        "description": "a group for testing"
      }'''
      }
    PreScriptLang: Groovy
    REQUEST_VARIABLE: serviceRequest
    RESPONSE_VARIABLE: serviceResponse
    display: x=350,y=120,w=100,h=80
    max_tries: '2'
    retry_interval: '60'
  links:
  - id: L2
    attributes:
      display: type=Elbow,x=480,y=160,xs=454&506,ys=160&160
    event: FINISH
    to: S2
- id: S5
  name: |-
    Create
    Request
  descriptor: flowbee-demo.java.DynamicJavaActivity
  attributes:
    ClassName: UnparseableResponse_A5
    Java: ""
    Output Documents: '["serviceRequest","serviceRequestHeaders"]'
    display: x=180,y=120,w=100,h=80
  links:
  - id: L5
    attributes:
      display: type=Elbow,x=315,y=160,xs=284&346,ys=160&160
    event: FINISH
    to: S3
variables:
  serviceRequest:
    type: model.StringDocument
  serviceRequestHeaders:
    type: java.util.Map<String,String>
  serviceResponse:
    type: org.json.JSONObject
  url:
    type: java.lang.String
