attributes:
  ArrowStyle: ArrowEnd
  NodeStyle: BoxIcon
  PROCESS_VISIBILITY: PUBLIC
  PerformanceLevel: '0'
  display: x=35,y=34,w=149,h=26
steps:
- id: S1
  name: Start
  path: flowbee-demo.start
  attributes:
    display: x=60,y=100,w=60,h=40
  links:
  - id: L1
    attributes:
      display: type=Elbow,x=158,y=119,xs=124&192,ys=119&119
    to: S3
- id: S2
  name: Stop
  path: flowbee-demo.stop
  attributes:
    Monitors: '[["true","Milestone","milestones/ActivityMilestone.java",""],["true","Test Cases","testing/TestCaseActivityMonitor.java",""],["true","Zipkin Activity","zipkin/TraceActivityMonitor.java",""]]'
    display: x=735,y=212,w=60,h=40
- id: S3
  name: |-
    Milestone
    One
  path: flowbee-demo.script.ScriptExecutorActivity
  attributes:
    Monitors: '[["true","Milestone","milestones/ActivityMilestone.java",""],["true","Test Cases","testing/TestCaseActivityMonitor.java",""],["true","Zipkin Activity","zipkin/TraceActivityMonitor.java",""]]'
    Rule: runtimeContext.logDebug("Executing " + runtimeContext.activity.name)
    SCRIPT: Groovy
    display: x=196,y=89,w=100,h=60
  links:
  - id: L2
    attributes:
      display: type=Elbow,x=245,y=178,xs=245&245,ys=154&202
    to: S4
- id: S4
  name: |-
    Create
    Plan
  path: flowbee-demo.script.ScriptExecutorActivity
  attributes:
    Output Documents: '["executionPlan"]'
    Rule: |
      import bpm.ProcessExecutionPlanDocument
      import bpm.ParameterDocument.Parameter
      import bpm.ProcessExecutionPlanDocument.ProcessExecutionPlan
      import bpm.SubprocessInstanceDocument.SubprocessInstance
      import model.workflow.WorkStatus

      executionPlan = ProcessExecutionPlanDocument.Factory.newInstance()
      ProcessExecutionPlan exeplan = executionPlan.addNewProcessExecutionPlan()

      SubprocessInstance subprocinst = exeplan.addNewSubprocessInstance()
      subprocinst.setLogicalProcessName("SubOne")
      subprocinst.setStatusCode(WorkStatus.STATUS_PENDING_PROCESS.intValue())
      addParameter(subprocinst, "inputVar", "\$subOneInput")

      subprocinst = exeplan.addNewSubprocessInstance()
      subprocinst.setLogicalProcessName("SubTwo")
      subprocinst.setStatusCode(WorkStatus.STATUS_PENDING_PROCESS.intValue())
      addParameter(subprocinst, "inputVar", "\$subTwoInput")

      void addParameter(SubprocessInstance subprocinst, String name, String value) {
          Parameter param = subprocinst.addNewParameter()
          param.setName(name)
          param.setStringValue(value)
      }
    SCRIPT: Groovy
    display: x=195,y=205,w=100,h=60
  links:
  - id: L3
    attributes:
      display: type=Elbow,x=349,y=236,xs=299&399,ys=236&236
    to: S5
- id: S5
  name: |-
    Invoke
    Subs
  path: flowbee-demo.process.InvokeHeterogeneousProcessActivity
  attributes:
    Execution Plan: executionPlan
    Monitors: '[["false","Milestone","milestones/ActivityMilestone.java",""],["true","Test Cases","testing/TestCaseActivityMonitor.java",""],["true","Zipkin Activity","zipkin/TraceActivityMonitor.java",""]]'
    STATUS_AFTER_EVENT: Hold
    display: x=403,y=206,w=100,h=60
    processmap: '[["SubOne","tests.milestones/SubOne.proc","[0,1)"],["SubTwo","tests.milestones/SubTwo.proc","[0.1,1)"]]'
    synchronous: 'true'
  links:
  - id: L4
    attributes:
      display: type=Elbow,x=545,y=235,xs=507&584,ys=235&235
    to: S6
- id: S6
  name: Lastly
  path: flowbee-demo.DefaultActivityImpl
  attributes:
    Monitors: '[["true","Milestone","milestones/ActivityMilestone.java",""],["true","Test Cases","testing/TestCaseActivityMonitor.java",""],["true","Zipkin Activity","zipkin/TraceActivityMonitor.java",""]]'
    display: x=588,y=214,w=60,h=40
  links:
  - id: L5
    attributes:
      display: type=Elbow,x=691,y=233,xs=652&731,ys=233&233
    to: S2
variables:
  executionPlan:
    type: org.apache.xmlbeans.XmlObject
  subOneInput:
    type: java.lang.String
  subTwoInput:
    type: java.lang.String
